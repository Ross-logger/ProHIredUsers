services:
  postgres:
    container_name: postgres
    image: postgres:15
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    platform: linux/amd64
    ports:
      - "5433:5432"
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5


  redis:
    container_name: redis
    image: redis:7.2.4
    platform: linux/amd64
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  users_service:
    container_name: users_service
    build:
      context: .
    platform: linux/amd64
    ports:
      - "8000:8000"
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  celery_beat:
    container_name: celery_beat
    build:
      context: .
    platform: linux/amd64
    command: celery -A src.celery_tasks.tasks beat --loglevel=info
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data: